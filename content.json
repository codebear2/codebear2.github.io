{"meta":{"title":"板砖的bear","subtitle":"","description":"","author":"zhou xiong","url":"http://yoursite.com","root":"/"},"pages":[{"title":"about","date":"2020-06-20T16:23:59.000Z","updated":"2020-06-20T16:31:33.004Z","comments":true,"path":"about/index.html","permalink":"http://yoursite.com/about/index.html","excerpt":"","text":"一名努力搬砖的程序🐻搬砖格言：砖容易，用砖头难，好好使搬砖，对手拿刀都不安str~"},{"title":"","date":"2020-06-21T07:50:44.000Z","updated":"2020-06-21T07:52:38.240Z","comments":true,"path":"tags/index.html","permalink":"http://yoursite.com/tags/index.html","excerpt":"","text":""},{"title":"","date":"2020-06-21T07:53:07.000Z","updated":"2020-06-21T07:54:08.543Z","comments":true,"path":"categories/index.html","permalink":"http://yoursite.com/categories/index.html","excerpt":"","text":""}],"posts":[{"title":"markdown-基本语法","slug":"markdown-基本语法","date":"2020-06-21T03:33:11.000Z","updated":"2020-06-21T04:12:20.284Z","comments":true,"path":"2020/06/21/markdown-基本语法/","link":"","permalink":"http://yoursite.com/2020/06/21/markdown-%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/","excerpt":"","text":"效果展示： 这是一级标题这是二级标题这是三级标题这是四级标题这是五级标题这是六级标题这是加粗的文字这是倾斜的文字 这是斜体加粗的文字这是加删除线的文字 这是引用的内容 分割线 添加图片的方法： 添加超链接：简书百度 无序列表语法： 用 - + * 任何一种都可以 列表内容 列表内容 列表内容注意：- + * 跟内容之间都要有一个空格 有序列表语法：数字加点 列表内容 列表内容 列表内容注意：序号跟内容之间要有空格 代码处理：语法：单行代码：代码之间分别用一个反引号包起来 代码内容 代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行() 代码... 代码... 代码... () 语法示例：# 这是一级标题 ## 这是二级标题 ### 这是三级标题 #### 这是四级标题 ##### 这是五级标题 ###### 这是六级标题 **这是加粗的文字** *这是倾斜的文字* ***这是斜体加粗的文字*** ~~这是加删除线的文字~~ &gt;这是引用的内容 分割线 --- ---- *** ***** 添加图片的方法： ![元素](https://s1.ax1x.com/2020/06/21/N14qQs.png) 添加超链接： [简书](http://jianshu.com) [百度](http://baidu.com) 无序列表 语法： 用 - + * 任何一种都可以 - 列表内容 + 列表内容 * 列表内容 注意：- + * 跟内容之间都要有一个空格 有序列表 语法： 数字加点 1. 列表内容 2. 列表内容 3. 列表内容 注意：序号跟内容之间要有空格 代码处理： 语法： 单行代码：代码之间分别用一个反引号包起来 `代码内容` 代码块：代码之间分别用三个反引号包起来，且两边的反引号单独占一行 (```) 代码... 代码... 代码... (```)","categories":[],"tags":[]},{"title":"java-简谈构造方法","slug":"java-简谈构造方法","date":"2020-06-20T13:30:27.000Z","updated":"2020-06-20T13:49:59.021Z","comments":true,"path":"2020/06/20/java-简谈构造方法/","link":"","permalink":"http://yoursite.com/2020/06/20/java-%E7%AE%80%E8%B0%88%E6%9E%84%E9%80%A0%E6%96%B9%E6%B3%95/","excerpt":"构造方法的三个特点：","text":"构造方法的三个特点： 1.构造方法的名称必须与类的名称相同2.构造方法的前面没有返还类型 ： public run（）{}3.如果你没有在类中定义构造方法，那么在编译阶段，编译器会自动给出一个构造方法，也就是说，编译器会在编译阶段在字节码文件中补充添加一个构造方法，此构造方法是没有参数的。 教科书上一般定义为：构造方法是为了创建一个对象 晦涩难懂 另一种简单的的说法： 初始化对象的内部状态 就是说给对象的各个属性赋初值 范例public class 测试1 {— public static void main(String[] args) { Student p1 =new Student(18,&quot;jack&quot;); Student p2 =new Student(19,&quot;jack&quot;); p1.printlnof(); p2.getAge(); p2.printlnof(); }}class Student{ private int age; private String name; public Student(int age,String name) { this.age=age; this.name=name; } public void printlnof() { System.out.println(&quot;age: &quot;+age+&quot; name: &quot;+name); } public void getAge() { int s=10; age+=s; } }// 所谓 构造方法就是 对类的内部进行初始化","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2020-06-19T12:42:01.618Z","updated":"2020-06-21T03:33:59.986Z","comments":true,"path":"2020/06/19/hello-world/","link":"","permalink":"http://yoursite.com/2020/06/19/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}